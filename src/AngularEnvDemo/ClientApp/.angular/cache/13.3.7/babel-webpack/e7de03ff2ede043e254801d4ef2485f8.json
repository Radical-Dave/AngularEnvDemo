{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\nconst providers = [{\n  provide: 'BASE_URL',\n  useFactory: getBaseUrl,\n  deps: []\n}];\n\nif (environment.production) {\n  enableProdMode();\n} else {//\n}\n\n__NgCli_bootstrap_1.platformBrowser(providers).bootstrapModule(AppModule).catch(err => console.log(err)); //import { argv } from 'yargs';\n//import yargs from 'yargs'\n//import { Arguments } from 'https://deno.land/x/yargs/deno-types.ts'\n//var argv = require('yargs/yargs')\n//environment.environment = argv.environment\n//environment.peregrine_api_key = argv.peregrine_api_key\n//environment.peregrine_api_audience = argv.peregrine_api_audience\n//environment.peregrine_api_authority = argv.peregrine_api_authority\n//environment.peregrine_api_client_id = argv.peregrine_api_client_id\n//environment.peregrine_api_client_secret = argv.peregrine_api_client_secret\n//import _yargs from 'yargs';\n//import { hideBin } from 'yargs/helpers';\n//const yargs = _yargs(hideBin(process.argv));\n//(async () => {\n//  const argv = await yargs\n//    .option('environment', { type: 'string', require: true })\n//    .option('peregrine_api_key', { type: 'string', require: true })\n//    .option('peregrine_api_audience', { type: 'string', require: true })\n//    .option('peregrine_api_authority', { type: 'string', require: true })\n//    .option('peregrine_api_client_id', { type: 'string', require: true })\n//    .option('peregrine_api_client_secret', { type: 'string', require: true })\n//    //.alias('f', 'filename')\n//    //.alias('c', 'content')\n//    .argv;\n//fs.writeFile(argv.filename, '' + argv.content, error => {\n//  if (error) throw error;\n//  console.log(`File ${argv.filename} saved.`);\n//});\n//const _yargs = require(\"yargs\");\n//const args = _yargs(process.argv.slice(2)).parse();\n//export default args;\n//environment.environment = args[\"environment\"];//.toString();\n//environment.peregrine_api_key = args[\"peregrine_api_key\"];//.toString();\n//environment.peregrine_api_audience = args[\"peregrine_api_audience\"];//.toString();\n//environment.peregrine_api_authority = args[\"peregrine_api_authority\"];//.toString();\n//environment.peregrine_api_client_id = args[\"peregrine_api_client_id\"];//.toString();\n//environment.peregrine_api_client_secret = args[\"peregrine_api_client_secret\"];//.toString();\n\n\nconsole.log('env=', environment.environment);","map":{"version":3,"sources":["D:/repos/AngularEnvDemo/AngularEnvDemo/ClientApp/src/main.ts"],"names":["__NgCli_bootstrap_1","enableProdMode","AppModule","environment","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","production","platformBrowser","bootstrapModule","catch","err","console","log"],"mappings":"AAAA,OAAO,KAAKA,mBAAZ,MAAqC,2BAArC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAO,SAASC,UAAT,GAAsB;AACzB,SAAOC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,IAAhD;AACH;AACD,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,OAAO,EAAE,UAAX;AAAuBC,EAAAA,UAAU,EAAEN,UAAnC;AAA+CO,EAAAA,IAAI,EAAE;AAArD,CADc,CAAlB;;AAGA,IAAIR,WAAW,CAACS,UAAhB,EAA4B;AACxBX,EAAAA,cAAc;AACjB,CAFD,MAGK,CACD;AACH;;AACDD,mBAAmB,CAACa,eAApB,CAAoCL,SAApC,EAA+CM,eAA/C,CAA+DZ,SAA/D,EACKa,KADL,CACWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADlB,E,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBf,WAAW,CAACA,WAAhC","sourcesContent":["import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nexport function getBaseUrl() {\r\n    return document.getElementsByTagName('base')[0].href;\r\n}\r\nconst providers = [\r\n    { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\nelse {\r\n    //\r\n}\r\n__NgCli_bootstrap_1.platformBrowser(providers).bootstrapModule(AppModule)\r\n    .catch(err => console.log(err));\r\n//import { argv } from 'yargs';\r\n//import yargs from 'yargs'\r\n//import { Arguments } from 'https://deno.land/x/yargs/deno-types.ts'\r\n//var argv = require('yargs/yargs')\r\n//environment.environment = argv.environment\r\n//environment.peregrine_api_key = argv.peregrine_api_key\r\n//environment.peregrine_api_audience = argv.peregrine_api_audience\r\n//environment.peregrine_api_authority = argv.peregrine_api_authority\r\n//environment.peregrine_api_client_id = argv.peregrine_api_client_id\r\n//environment.peregrine_api_client_secret = argv.peregrine_api_client_secret\r\n//import _yargs from 'yargs';\r\n//import { hideBin } from 'yargs/helpers';\r\n//const yargs = _yargs(hideBin(process.argv));\r\n//(async () => {\r\n//  const argv = await yargs\r\n//    .option('environment', { type: 'string', require: true })\r\n//    .option('peregrine_api_key', { type: 'string', require: true })\r\n//    .option('peregrine_api_audience', { type: 'string', require: true })\r\n//    .option('peregrine_api_authority', { type: 'string', require: true })\r\n//    .option('peregrine_api_client_id', { type: 'string', require: true })\r\n//    .option('peregrine_api_client_secret', { type: 'string', require: true })\r\n//    //.alias('f', 'filename')\r\n//    //.alias('c', 'content')\r\n//    .argv;\r\n//fs.writeFile(argv.filename, '' + argv.content, error => {\r\n//  if (error) throw error;\r\n//  console.log(`File ${argv.filename} saved.`);\r\n//});\r\n//const _yargs = require(\"yargs\");\r\n//const args = _yargs(process.argv.slice(2)).parse();\r\n//export default args;\r\n//environment.environment = args[\"environment\"];//.toString();\r\n//environment.peregrine_api_key = args[\"peregrine_api_key\"];//.toString();\r\n//environment.peregrine_api_audience = args[\"peregrine_api_audience\"];//.toString();\r\n//environment.peregrine_api_authority = args[\"peregrine_api_authority\"];//.toString();\r\n//environment.peregrine_api_client_id = args[\"peregrine_api_client_id\"];//.toString();\r\n//environment.peregrine_api_client_secret = args[\"peregrine_api_client_secret\"];//.toString();\r\nconsole.log('env=', environment.environment);\r\n"]},"metadata":{},"sourceType":"module"}